#!/bin/bash

LOGFILE="/var/log/oc.log"
OC_CMD="/opt/oc"
USER="$(whoami)"
DATE="$(date "+%d-%b-%Y %T")"
SESSION="$(shuf -i 1-100000 -n 1)"
ARGS="${@}"

# Log command invoked by the user
echo "${DATE} ${USER}:${SESSION} ${0} ${ARGS})" >> ${LOGFILE}


# Find the current oc user
OC_USER=$(${OC_CMD} whoami 2>&1)
RET="$?"
if [ "${RET}" != "0" ]; then
    echo "${OC_USER}"
    exit "${RET}"
fi

# Find the current oc server
OC_SERVER=$(${OC_CMD} whoami --show-server  2>&1)
RET="$?"
if [ "${RET}" != "0" ]; then
    echo "${OC_SERVER}"
    exit "${RET}"
fi

# Log command invoked by the user
echo "${DATE} ${USER}:${SESSION} OC_USER=${OC_USER} OC_SERVER=${OC_SERVER})" >> ${LOGFILE}

# Check if delete operation is present
echo " ${ARGS} " | grep -q " delete " &>> /dev/null
DEL="$?"

if [ "${DEL}" == "0" ]; then
    # Dry run the delete operation
    DRY_DEL_OUT=$(${OC_CMD} ${ARGS} --dry-run=client 2>&1)
    DRY_DEL_RET="$?"
    if [ "${DRY_DEL_RET}" == "0" ]; then
        NUM_DEL=$(echo "${DRY_DEL_OUT}" | grep "deleted" | wc -l)
        echo "============="
        echo "== DRY RUN =="
        echo "============="
        echo "${DRY_DEL_OUT}"
        echo "============================================="
        echo "${NUM_DEL} objects will be deleted!"
        echo -n "Press [Enter] to continue or [Ctrl+C] to exit "
        read confirm
        echo "${DATE} ${USER}:${SESSION} ${0} ${ARGS} Confirmed deletion of ${NUM_DEL} objects: ${DRY_DEL_OUT}" >> ${LOGFILE}
    else
        echo "ERROR: '${OC_CMD} ${ARGS} --dry-run=client' failed (${DRY_DEL_RET}) with the following error:"
        echo "${DRY_DEL_OUT}"
        exit ${DRY_DEL_RET}
    fi
fi

# No delete operation detected, execute the oc command as it is
${OC_CMD} ${ARGS}
OC_CMD_RET="$?"
echo "${DATE} ${USER}:${SESSION} ${OC_CMD} ${ARGS} Returned: ${OC_CMD_RET}" >> ${LOGFILE}
exit ${OC_CMD_RET}



